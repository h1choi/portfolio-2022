
:root {
	font-size: 20px;
}

html {
    height: 100%;
	box-sizing: border-box;
	scroll-behavior: smooth;
}

  *,
  *:before,
  *:after {
	box-sizing: inherit;
  }

body {
	min-height: 100%;
	margin: 0;
	--color-text: #000;
	--color-bg: #4000ea;
	--color-link: #fff;
	--color-link-hover: #f33ba5;
	--color-menu: #000;
	--color-menu-hover: #f33ba5;
	color: var(--color-text);
	background-color: var(--color-bg);
	--cursor-stroke: none; 
	--cursor-fill: #e0530e; 
	--cursor-stroke-width: 1px; 
	-webkit-font-smoothing: antialiased;
	-moz-osx-font-smoothing: grayscale;
	font-family: 'Roboto', Arial, Helvetica, sans-serif;
}

main {
	height: auto;
}

svg {
	width: 90%;
	position: absolute;
	top: 50%;
	left: 50%;
	transform: translate(-50%, -50%);
  } 
  
.hero {
	width: 50%;
  
  }
  
.logo {
	width: 8rem;
	position: absolute;
	padding: 15px;
	justify-self: center;
	top: 10%;
  
  } 

/* Page Loader */
.js .loading::before,
.js .loading::after {
	content: '';
	position: fixed;
	z-index: 1000;
}

.js .loading::before {
	top: 0;
	left: 0;
	width: 100%;
	height: 100%;
	background: var(--color-bg);
}

.js .loading::after {
	top: 50%;
	left: 50%;
	width: 60px;
	height: 60px;
	margin: -30px 0 0 -30px;
	opacity: 0.4;
	background: var(--color-link);
	animation: loaderAnim 0.7s linear infinite alternate forwards;

}

@keyframes loaderAnim {
	to {
		opacity: 1;
		transform: scale3d(0.5,0.5,1);
	}
}

a {
	text-decoration: none;
	color: var(--color-link);
	outline: none;
	position: relative;
}

a:hover {
	color: var(--color-link-hover);
	outline: none;
}

/* Better focus styles from https://developer.mozilla.org/en-US/docs/Web/CSS/:focus-visible */
a:focus {
	/* Provide a fallback style for browsers
	 that don't support :focus-visible */
	outline: none;
	background: lightgrey;
}

a:focus:not(:focus-visible) {
	/* Remove the focus indicator on mouse-focus for browsers
	 that do support :focus-visible */
	background: transparent;
}

a:focus-visible {
	/* Draw a very noticeable focus style for
	 keyboard-focus on browsers that do support
	 :focus-visible */
	outline: 2px solid red;
	background: transparent;
}

.cursor { 
	display: none; 
}

.unbutton {
	background: none;
	border: 0;
	padding: 0;
	margin: 0;
	font: inherit;
}

.unbutton:focus {
	outline: none;
}

/* MENU */

.menu {
	padding: 2rem 1rem 3rem;
	display: flex;
	align-items: center;
	justify-content: center;
	flex-wrap: wrap;
	-webkit-touch-callout: none;
	-webkit-user-select: none;
	-moz-user-select: none;
	-ms-user-select: none;
	user-select: none;
	counter-reset: menucounter;
	z-index: 100;
}

.menu__item {
	margin-bottom: 1rem;
	font-family: 'Roboto', sans-serif;
	text-transform: uppercase;
	cursor: pointer;
	color: var(--color-menu);
	will-change: transform;
}

.menu__item::before {
	counter-increment: menucounter;
	content: counters(menucounter, ".", decimal-leading-zero);
	position: absolute;
	left: 0;
	top: 0;
	color: var(--color-link);
	z-index: -1;
	line-height: 1;
}

.menu__item-text {
	pointer-events: none;
	display: block;
	line-height: 1;
	position: relative;
	z-index: -1;
	font-size: 2rem;
}

.menu__item-text .word {
	padding: 0 1.25rem;
	overflow: hidden;
	perspective: 1000px;
	perspective-origin: -150% 50%;
}

.menu__item-text .word--clone {
	position: absolute;
	width: 100%;
	height: 100%;
	top: 0;
	left: 0;
}

.menu__item-text .word--clone .char {
	opacity: 0;
}

.menu__item-text .char {
	transform-origin: 0% 0%;
	will-change: transform;
}

.hover-reveal {
	position: absolute;
	z-index: -1;
	width: 350px;
	height: 450px;
	top: 0;
	left: 0;
	pointer-events: none;
	opacity: 0;
	will-change: transform, filter;
}

.hover-reveal__inner {
	overflow: hidden;
	will-change: transform, opacity;
}

.hover-reveal__inner,
.hover-reveal__img {
	width: 100%;
	height: 100%;
	position: relative;
}

.hover-reveal__img {
	background-size: cover;
	background-position: 50% 50%;
	will-change: transform;
}

.content {
	max-width: 40ch;
	height: 60%;
	margin: auto;
	padding: 12em 0 28em 0;
	z-index: -1;
	position: relative;
	font-family: 'Roboto', Arial, Helvetica, sans-serif;
}

.about-title {
	font-weight: 500;
	font-size: 5em;
}


.mask {
	position: absolute;
	z-index: 2;
	background: white;
	height: 100vh;
	width: 100vw;
	mix-blend-mode: screen;
	/* display: none; */
  }

.footer_credit {
	display: flex;
	justify-content: center;
	align-items: baseline;
	padding-bottom: 15px;
	font-family: 'Roboto', Arial, Helvetica, sans-serif;
}
  

@media screen and (min-width: 53em) {
	.frame {
		pointer-events: none;
		z-index: 3;
		position: fixed;
		display: grid;
		height: 100vh;
		width: 100%;
		align-content: space-between;
		grid-template-areas: 'work ... about' 'instagram ... email';
		padding: 1.5rem 2rem;
	}
	.frame a {
		pointer-events: auto;
	}
	.frame__work {
		justify-self: start;
	}

	.frame__about {
		justify-self: end;
		grid-area: about;
	}

	.frame__instagram {
		margin: 0;
		grid-area: instagram;
		justify-self: start;
	}
	.frame__email {
		grid-area: email;
		justify-self: end;
	}
	
	.frametext {
		font-family: 'Roboto', Arial, Helvetica, sans-serif;
		font-size: 1em;
		font-weight: 500;
		color: #000;
	}

	.menu {
		padding: 21vh 1rem 3rem;
	}
	.menu__item::before {
		left: 1vw;
		top: 0.25vw;
	}
	.menu__item-text {
		font-size: 7.5vw;
	}
	.menu__item-text .word {
    	padding: 0 3vw;
    }
}

@media (any-pointer:fine) {
	.cursor {
		position: fixed;
		top: 0;
		left: 0;
		display: block;
		pointer-events: none;
		z-index: 1001;
	}

	.cursor__inner {
		fill: var(--cursor-fill);
		stroke: var(--cursor-stroke);
		stroke-width: var(--cursor-stroke-width);
		opacity: 0.7;
	}

	.no-js .cursor {
		display: none;
	}

}

@media (min-width: 375px) {
	.frame {
		pointer-events: none;
		z-index: 3;
		position: fixed;
		display: grid;
		height: 100vh;
		width: 100%;
		align-content: space-between;
		grid-template-areas: 'work ... about' 'instagram ... email';
		padding: 1.5rem 2rem;
	}
	.frame a {
		pointer-events: auto;
	}
	.frame__work {
		justify-self: start;
	}

	.frame__about {
		justify-self: end;
		grid-area: about;
	}

	.frame__instagram {
		margin: 0;
		grid-area: instagram;
		justify-self: start;
	}
	.frame__email {
		grid-area: email;
		justify-self: end;
	}
	
	.frametext {
		font-family: 'Roboto', Arial, Helvetica, sans-serif;
		font-size: 1em;
		font-weight: 500;
		color: #000;
	}
  }
